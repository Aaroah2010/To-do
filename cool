<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ965fqDDFJHkQa6kuWbPRA82PaqJubBw4gtQ&usqp=CAU">
    <title>To-Do App</title>
<style>*{
    margin : 0px ; 
    padding : 0px ;
    box-sizing: border-box;
}
body {
	background: linear-gradient(-45deg, #d1d8e0, #a5b1c2, #778ca3, #4b6584);
	background-size: 400% 400%;
	animation: gradient 15s ease infinite;
}

@keyframes gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}

.container{
    width : 500px ;
    margin: 25px auto ;
    display: flex;
    justify-content: space-evenly;
    padding : 5px ; 
    flex-wrap: wrap;
}

.input{
    width : 300px ; 
    padding: 6px 15px ;
    font-size: 18px ;
    border: none;
    border-radius: 7px;
    outline: none;
    font-family: cursive;
    transition: all .2s ;
}
.input:hover , .input:focus{
    background-color: #273c75;
    color : white ; 
    padding : 8px 15px ; 
}
.add-button{
    border-radius: 5px;
    border : none ; 
    outline: none;
    font-size: 18px;
    font-weight: bold ;
    padding : 8px ;
    background-color: #44bd32;
    color : white ; 
    font-family: arial ;
    cursor: pointer;
    transition: all 0.2s ;
}

.todo-item{
    padding : 12px 30px ; 
    width: 65% ;
    margin : 10px  auto ;
    color : white ; 
    font-family: cursive ;
    background-color: #273c75 ;
    border-radius: 10px ;
    font-size: 18px ;
    display: flex ;
    align-items: center;
    justify-content: space-between ;
    transition : all .3s ; 
}
.todo-item:hover{
    background-color: #192a56;
}

.remove-button{
    border-radius: 4px;
    border : none ; 
    outline: none;
    font-size: 17px;
    padding : 8px ;
    background-color: #c23616;
    color : white ; 
    font-family: cursive  ;
    cursor: pointer ;
    transition : all .2s ; 
}

.add-button:hover, .remove-button:hover{
    border : white 3px solid ; 
}</style>
    
</head>
<body>
    
    <div class="container">
        <input type="text" class="input" >
        <button class="add-button"> Add task   </button>
    </div>
    
    <div class="list"></div>
    
    <script src="">
    let addButton = document.querySelector('.add-button');
let input = document.querySelector('.container input');
let list = document.querySelector(".list");

addButton.addEventListener("click", addTodo);
input.addEventListener('keypress', addTodoOnEnter);

// creating tasks array in local-storage
if (localStorage.getItem("tasks") == null) {
    localStorage.setItem("tasks", "[]");
}

let allItems = JSON.parse(localStorage.getItem("tasks"));
let id = allItems.length - 1;

// invoking show function in the beginning 
show();

// function to check if "enter" key is pressed
function addTodoOnEnter(e) {
    if (e.key == "Enter") {
        addTodo();
    }
}

// 'show' function to display all the tasks on the webpage
function show() {
    list.innerHTML = "";
    for (let i = 0; i < allItems.length; i++) {
        let itemDiv = document.createElement('div');
        itemDiv.textContent = allItems[i];
        itemDiv.classList.add("todo-item");

        let removeButton = document.createElement("button");
        removeButton.textContent = "Remove";
        removeButton.classList.add("remove-button");

        itemDiv.append(removeButton);
        list.append(itemDiv);

        removeButton.addEventListener('click', removeItem);
        removeButton.setAttribute("id", id);
        id++;
    }
}

// function to add tasks in the list
function addTodo(event) {
    let todoItem = input.value;         // getting the value from input filed
    if (todoItem) { 
        allItems.push(todoItem);            // adding task in the tasks array 

        // updating the local storage 
        localStorage.setItem("tasks", JSON.stringify(allItems));
        show();
    }

    // emptying the input field back again
    input.value = "";
}

// function to remove a task in the list
function removeItem(e) {

    // getting the item to be deleted 
    let todoItem = e.target.previousSibling.textContent;
    let idx = allItems.indexOf(todoItem);                   \
    allItems.splice(idx, 1);                              
    // console.log(allItems);
    localStorage.setItem("tasks", JSON.stringify(allItems));        // updating the local storage 
    list.innerHTML = "";                                            
    show(); 
}
    </script>
</body>
</html>
